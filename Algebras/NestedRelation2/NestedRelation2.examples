Database : opt
Restore  : NO

Operator : unnest
Number   : 1
Signature: stream -> stream
Example  : query plz feed nest2[Ort; AllPlz] unnest[AllPlz] count 
Result   : 41267

Operator : nest2
Number   : 1
Signature: stream -> stream
Example  : query plz feed nest2[Ort; AllPlz] count 
Result   : 16788

Operator : count
Number   : 2
Signature: nrel2 -> int
Example  : query plz feed nest2[Ort; AllPlz] count
Result   : 16788

Operator : feed
Number   : 1
Signature: nrel2 -> stream
Example  : query plz feed nest2[Ort; AllPlz] consume feed count 
Result   : 16788

Operator : consume2
Number   : 1
Signature: stream -> nrel2
Example  : query plz feed nest2[Ort; AllPlz] head[0] consume2 
Result   : ((nrel2 (tuple ((Ort string) (AllPlz (arel2 (tuple ((PLZ int)))))))) ()) 

Operator : aconsume2
Number   : 1
Signature: stream -> arel2
Example  : query plz feed nest2[Ort; AllPlz] head[0] aconsume2
Result   : ((arel2 (tuple ((Ort string) (AllPlz (arel2 (tuple ((PLZ int)))))))) ()) 

Operator : extract
Number   : 1
Signature: stream -> nrel2
Example  : query plz feed nest2[Ort; AllPlz] extract[AllPlz] count 
Result   : 3

Operator : rename
Number   : 1
Signature: stream -> stream
Example  : query plz feed nest2[Ort; AllPlz] rename[Ort] head[0] consume 
Result   : ((rel (tuple ((Ort_Ort string) (AllPlz_Ort (arel2 (tuple ((PLZ int)))))))) ()) 

Operator : gettuples
Number   : 1
Signature: stream -> stream
Example  : query index1 feed children gettuples count
Result   : bug
Remark   : No index present

Operator : dblpimport
Number   : 1
Signature: text -> nrel2
Example  : query 'dblp.xml' dblpimport['stopwords.txt'] count >= 0
Result   : TRUE

Operator : genRel
Number   : 1
Signature: string, string, int, int, string, int, int, arel2/arel/vector -> nrel2/arel2/nrel/arel/vector
Example  : query genRel("nrel2", "Attr", 10, 100, "int", 0, 2, genRel("arel2", "Attr", 10, 100, "int", 0, 2, undefined)) feed count 
Result   : 100


Operator : typeof
Number   : 1
Signature: X -> X
Example  : query genRel("nrel2", "Attr", 10, 100, "int", 0, 0, undefined) typeof consume
Result   : bug
Remark   : typerrror
