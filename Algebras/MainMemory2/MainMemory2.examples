Sequential: Yes
Database  : berlintest
Restore   : No

Operator  : memload
Number    : 1
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let ten2 = memload(ten)
Result    : ()

Operator  : meminit
Number    : 2
Signature : int -> int
Example   : query meminit (256)
Result    : 256

Operator  : mfeed
Number    : 3
Signature : MREL -> stream(tuple)
Example   : query ten2 mfeed count
Result    : 10

Operator  : mfeed
Number    : 4
Signature : MREL -> stream(tuple)
Example   : query mwrap("ten2") mfeed count
Result    : 10

Operator  : mconsume
Number    : 5
Signature : stream(tuple(...)) -> mpointer(mem(rel(tuple(...))))
Example   : let mten = ten2 mfeed mconsume
Result    : ()


Operator  : memobject
Number    : 6
Signature : MX  -> X , M is mem or mpointer, X in {DATA,rel)
Example   : query memobject (mwrap("ten2")) count
Result    : 10

Operator  : memobject
Number    : 7
Signature : MX  -> X , M is mem or mpointer, X in {DATA,rel)
Example   : query memobject (ten2) count
Result    : 10


Operator  : memobject
Number    : 8
Signature : MX  -> X , M is mem or mpointer, X in {DATA,rel)
Example   : query memobject(memload("astring"))
Result    : (string "astring")



Operator  : mconsume
Number    : 9
Signature : stream(tuple) -> mpointer(mem(rel(tuple)))
Example   : let fuenf = ten feed head[5] mconsume
Result    : ()

Operator  : nop
Number    : 10
Signature : mpointer -> nothing
Example   : delete ten2
Result    : ()


Operator  : mconsume
Number    : 11
Signature : stream(tuple) -> mpointer(mem(rel(tuple)))
Example   : update fuenf :=  ten feed head[7] mconsume
Result    : ()


Operator  : memload
Number    : 12
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mstrassen = memload(strassen)
Result    : ()


Operator  : memgetcatalog
Number    : 13
Signature : -> stream(tuple(...))
Example   : query memgetcatalog () count
Result    : 3

Operator  : mconsume
Number    : 14
Signature : stream(Tuple) -> mpointer(mem(rel(tuple)))
Example   : let fuenf2 = ten feed head[5] mconsume
Result    : ()

Operator  : mcreatertree
Number    : 15
Signature : (mpointer(mem(rel(...)))) x IDENT -> mpointer(mem(rtree X))
Example   : let mstrassen_GeoData =  mstrassen mcreatertree [GeoData]
Result    : ()

Operator  : mcreatertree
Number    : 16
Signature : stream(tuple(X))  x IDENT -> mpointer(mem(rtree X))
Example   : let mstrassen_GeoData2 =  strassen feed addid mcreatertree[GeoData]
Result    : ()

Operator  : memsize
Number    : 17
Signature : -> int
Example   : query memsize ()
Result    : 256

Operator  : memload
Number    : 18
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let ten2 = memload(ten)
Result    : ()

Operator  : meminsert
Number    : 19
Signature : stream(tuple) MREL  -> stream(tuple) , MREL represented as mpointer or mem
Example   : query ten feed head[5] meminsert[ten2] count
Result    : 5

Operator  : mwindowintersects
Number    : 20
Signature : MRTREE(X) x MREL(T) x SPATIAL_X  -> stream(T)
Example   : query mstrassen_GeoData mstrassen mwindowintersects[thecenter] count
Result    : 1266

Operator  : mwindowintersectsS
Number    : 22
Signature : MRTREE(T)  x  T -> stream(tuple(TID tid)) , MRTREE represented as mpointer or mem
Example   : query mstrassen_GeoData mwindowintersectsS[thecenter] count
Result    : 1266


Operator  : mconsume
Number    : 24
Signature : stream(tuple) -> mpointer(mem(rel(tuple)))
Example   : query ten2 mfeed head[2] mconsume
Result    : ( (mpointer (mem (rel (tuple ( (No int)))))) ( (1) (2)))


Operator  : memclear
Number    : 25
Signature : -> bool
Example   : query memclear ()
Result    : TRUE

Operator  : memload
Number    : 26
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mStaedte = memload(Staedte)
Result    : ()

Operator  : mcreateAVLtree
Number    : 27
Signature : MREL  x IDENT -> mpointer(mem(avltree(.))), MREL represented as mpointer or mem
Example   : let mStaedte_SName  =  mStaedte mcreateAVLtree [SName]
Result    : ()

Operator  : mdeleteavltree
Number    : 28
Signature : stream(tuple(x@[TID:tid])) x {mpointer, mem(ttree)} x IDENT -> stream(tuple(x@[TID:tid]))
Example   : query mStaedte mfeed addid head[5] mdeleteavltree[mStaedte_SName, SName] count
Result    : 5

Operator  : minsertavltree
Number    : 30
Signature : stream(tuple(x@[TID:tid])) x {mpointer, mem(ttree)} x IDENT -> stream(tuple(x@[TID:tid]))
Example   : query mStaedte mfeed addid head[5] minsertavltree[mStaedte_SName, SName] count;
Result    : 5

Operator  : mexactmatch
Number    : 32
Signature : {mpointer, mem(avltree T)}  x {MREL(X)}  x T -> stream(X)
Example   : query mStaedte_SName mStaedte mexactmatch ["Aachen"] count;
Result    : 1


Operator  : mrange
Number    : 34
Signature : MTREE(T)  x MREL(X)   x T x T-> stream(tuple(X))
Example   : query mStaedte_SName mStaedte mrange ["Aachen", "Dortmund"] count;
Result    : 10


Operator  : memload
Number    : 36
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let ten2 = memload(ten)
Result    : ()

Operator  : mcreateAVLtree
Number    : 37
Signature : MREL  x IDENT -> (mpointer(mem(avltree X)))
Example   : let ten2_No =  ten2 mcreateAVLtree[No]
Result    : ()


Operator  : matchbelow
Number    : 38
Signature : AVLTREE(T) x MREL(X) x T -> stream(X)
Example   : query ten2_No ten2 matchbelow [2] count;
Result    : 1

Operator  : memloadflob
Number    : 40
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mTrains = memloadflob(Trains)
Result    : ()


Operator  : mconsumeflob
Number    : 41
Signature : stream(tuple(...)) -> (mpointer(mem(rel(tuple(...)))))
Example   : let trainsFlob =  Trains feed mconsumeflob
Result    : ()

Operator  : mconsumeflob
Number    : 42
Signature : stream(tuple)  -> mpointer(mem(rel(tuple)))
Example   : let trains5 = Trains feed head[5] mconsumeflob
Result    : ()

Operator  : memload
Number    : 43
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mstrassen = memload(strassen)
Result    : ()


Operator  : mcreatemtree
Number    : 44
Signature : stream(Tuple) x IDENT x IDENT [x geoid] -> (mpointer(mem(mtree ...) )
Example   : let mkinos_GeoData_mtree =  Kinos feed addid mcreatemtree [GeoData, TID]
Result    : ()

Operator  : mcreatemtree2
Number    : 1400
Signature : stream(Tuple) x IDENT x IDENT x IDENT x real [x geoid] -> (mpointer(mem(mtree tuple) ) )
Example   : let mTrains_mtree = Trains feed head[25] addid extend[ML: [const mlabel value undef] ] mcreatemtree2[Trip, ML, TID, 0.0001]
Result    : ()

Operator  : mdistRange2
Number    : 45
Signature : MMTREE(T) x T x real -> stream(tuple((TID tid)))
Example   :  query mkinos_GeoData_mtree mdistRange2[alexanderplatz, 2000.0] transformstream Kinos gettuples sort = Kinos feed filter[ distance(.GeoData, alexanderplatz) < 2000.0] sort
Result    : TRUE


Operator  : mdistScan2
Number    : 47
Signature : MMTREE(T) x T -> stream(tuple((TID tid)))
Example   : query mkinos_GeoData_mtree mdistScan2[alexanderplatz] transformstream Kinos gettuples projectextend[; D : distance(.GeoData, alexanderplatz)] transformstream isOrdered
Result    : TRUE

Operator  : minsertmtree
Number    : 484
Signature : stream(Tuple) x MMTREE -> stream(tuple(x@TID)))
Example   : query Kinos feed addid minsertmtree[mkinos_GeoData_mtree, GeoData] count = Kinos count
Result    : TRUE

Operator  : memload
Number    : 49
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mKinos = memload(Kinos)
Result    : ()

Operator  : mcreatemtree
Number    : 50
Signature : MREL  x IDENT [x geoid]  -> mpointer(mem(mtree Y))
Example   : let mKinos_GeoData_mtree2 =  mKinos mcreatemtree[GeoData]
Result    : ()

Operator  : mdistRange
Number    : 52
Signature : MMTREEi(T) x MREL(X) x T (x U) x real -> stream(X)
Example   : query mKinos_GeoData_mtree2 mKinos mdistRange[alexanderplatz, 2000.0] count
Result    : 17


Operator  : mdistScan
Number    : 54
Signature : MMTREE(T)  x MREL(X)  x T -> stream(X)
Example   : query mKinos_GeoData_mtree2 mKinos mdistScan[alexanderplatz] head[17] extend[D : distance(.GeoData, alexanderplatz)] max[D]  <= 2000.0
Result    : TRUE

Operator  : mdistScan
Number    : 55
Signature : MMTREE(T) x MREL(X)  x T -> stream(X)
Example   : query mKinos_GeoData_mtree2 mKinos mdistScan[alexanderplatz] head[17] extend[D : distance(.GeoData, alexanderplatz)] max[D]  <= 2000.0
Result    : TRUE

Operator  : mcreatentree
Number    : 1909
Signature : MREL x IDENT x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree = mKinos mcreatentree[GeoData, 4, 8]
Result    : ()

Operator  : mcreatentree2
Number    : 1911
Signature : MREL x IDENT x int x int x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree2 = mKinos mcreatentree2[GeoData, 4, 8, 0, 0]
Result    : ()

Operator  : mcreatentree5
Number    : 1914
Signature : MREL x IDENT x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree5 = mKinos mcreatentree5[GeoData, 4, 8]
Result    : ()

Operator  : mcreatentree6
Number    : 1915
Signature : MREL x IDENT x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree6 = mKinos mcreatentree6[GeoData, 4, 8]
Result    : ()

Operator  : mcreatentree7
Number    : 1917
Signature : MREL x IDENT x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree7 = mKinos mcreatentree7[GeoData, 4, 8]
Result    : ()

Operator  : mcreatentree8
Number    : 1921
Signature : MREL x IDENT x int x int [x geoid] -> (mpointer(mem(ntree ...) )
Example   : let mKinos_GeoData_ntree8 = mKinos mcreatentree8[GeoData, 4, 8]
Result    : ()

Operator  : exportntree
Number    : 1924
Signature : NTREEx(T) x string x int [x int] -> bool
Example   : query mKinos_GeoData_ntree8 mKinos exportntree["kinos", 1]
Result    : TRUE

Operator  : importntree7
Number    : 1925
Signature : string x T [x int] -> NTREE7(T)
Example   : let mKinos_GeoData_ntree7_restored = importntree7("kinos", [const point value undef])
Result    : ()

Operator  : importntree8
Number    : 1926
Signature : string x T [x int] -> NTREE8(T)
Example   : let mKinos_GeoData_ntree8_restored = importntree8("kinos", [const point value undef])
Result    : ()

Operator  : mdistRangeN
Number    : 1910
Signature : NTREE(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree mKinos mdistRangeN[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mdistRangeN2
Number    : 1912
Signature : NTREE2(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree2 mKinos mdistRangeN2[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mdistRangeN5
Number    : 1913
Signature : NTREE5(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree5 mKinos mdistRangeN5[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mdistRangeN6
Number    : 1916
Signature : NTREE6(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree6 mKinos mdistRangeN6[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mdistRangeN7
Number    : 1918
Signature : NTREE7(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree7 mKinos mdistRangeN7[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mdistRangeN8
Number    : 1922
Signature : NTREE8(T) x MREL(X) x T (x U) x real -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree8 mKinos mdistRangeN8[alexanderplatz, 2000.0] count
Result    : 17

Operator  : mnearestNeighborN7
Number    : 1919
Signature : NTREE7(T) x MREL(X) x T -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree7 mKinos mnearestNeighborN7[alexanderplatz] head[1] extract[Strasse] contains "Rosa"
Result    : TRUE

Operator  : m1nearestNeighborN7
Number    : 1920
Signature : NTREE7(T) x MREL(X) x T -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree7 mKinos m1nearestNeighborN7[alexanderplatz] extract[QueryObjectDistance] < 500.0
Result    : TRUE

Operator  : m1nearestNeighborN8
Number    : 1923
Signature : NTREE8(T) x MREL(X) x T -> stream(tuple(X))
Example   : query mKinos_GeoData_ntree8 mKinos m1nearestNeighborN8[alexanderplatz] extract[QueryObjectDistance] < 500.0
Result    : TRUE

Operator  : mcreateAVLtree
Number    : 56
Signature : stream(tuple) x IDENT x IDENT -> mpointer(mem(avltree ))
Example   : let mstrassen_Name7 =  strassen feed addid mcreateAVLtree[Name, TID]
Result    : ()

Operator  : mexactmatchS
Number    : 57
Signature : MAVLTREE(T)  x T -> stream(tuple((TID tid)))
Example   : query mstrassen_Name7 mexactmatchS["Hirzerweg"] count
Result    : 5

Operator  : mrangeS
Number    : 59
Signature : MAVLTREE(T) x T x T -> stream(tuple((TID tid)))
Example   : query mstrassen_Name7 mrangeS["A", "B"] count
Result    : 247

Operator  : matchbelowS
Number    : 61
Signature : MAVLTREE(T)  x T -> stream(tuple((TID tid)))
Example   : query mstrassen_Name7 matchbelowS["B"] count
Result    : 1


Operator  : gettuples
Number    : 63
Signature : stream(tuple((A1 ( .. tid) A2))  x MREL(X) -> stream(tuple(A1A2X))
Example   : query ten2_No mrangeS[4, 5] ten2 gettuples consume count
Result    : 2

Operator  : gettuples
Number    : 65
Signature : stream(tid)  x MREL(X) -> stream(tuple(X))
Example   : query ten2_No mrangeS[4, 5] transformstream  ten2 gettuples consume count
Result    : 2

Operator  : memclear
Number    : 67
Signature : -> bool
Example   : query memclear()
Result    : TRUE

Operator  : memload
Number    : 68
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mStaedte = memload(Staedte)
Result    : ()

Operator  : memload
Number    : 69
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let ten2 = memload(ten)
Result    : ()

Operator  : mcreatettree
Number    : 70
Signature : MREL x IDENT -> (mpointer(mem(ttree X)))
Example   : let mStaedte_SName =  mStaedte mcreatettree[SName]
Result    : ()


Operator  : mdeletettree
Number    : 71
Signature : stream(tuple(x@[TID:tid])) x MTTREE x IDENT -> stream(tuple(x@[TID:tid]))
Example   : query Staedte feed head[5] addid mdeletettree[mStaedte_SName,SName] count;
Result    : 5

Operator  : minsertttree
Number    : 73
Signature : stream(tuple(x@[TID:tid])) x MTTREE x IDENT -> stream(tuple(x@[TID:tid]))
Example   : query Staedte feed head[5] addid minsertttree[mStaedte_SName,SName] count;
Result    : 5


Operator : mcreateinsertrel
Number   : 75
Signature: MREL(tuple(X))  ->(mpointer( mem(rel(tuple(X@[TID:tid]))) )
Example  : let ten_wtid = mcreateinsertrel(ten2);
Result   : ()

Operator  : minsert
Number    : 77
Signature : stream(tuple(x)) x MREL(x) -> stream(tuple(x@[TID:tid]))
Example   : query ten feed head[5] minsert[ten2] count;
Result    : 5

Operator  : minsertsave
Number    : 79
Signature : stream(tuple(x)) x MREL(x) x MREL(x@[TID:tid])} -> stream(tuple(x@[TID:tid]))
Example   : query ten feed head[5] minsertsave[ten2,ten_wtid] count;
Result    : 5


Operator  : minserttuple
Number    : 81
Signature : MREL(X) x X -> stream(X@[TID:tid])
Example   : query mStaedte minserttuple["AA",34,5666,"899","ZZ"] count;
Result    : 1


Operator  : mcreateinsertrel
Number    : 83
Signature : MREL(X) -> mpointer(mem(rel(X@[TID tid])))
Example   : let Stadt =  mcreateinsertrel(mStaedte)
Result    : ()


Operator  : minserttuplesave
Number    : 84
Signature : MREL(X) x X x MREL(X@[TID tid]) -> stream(X@[TID:tid])
Example   : query mStaedte minserttuplesave["AusgedachtDorf",34,5666,"899","ZZ"; Stadt] count;
Result    : 1


Operator  : mcreatedeleterel
Number    : 86
Signature : MREL(tuple(X)) -> mpointer(mem(rel(tuple(x@[TID:tid])))
Example   : let Doerfer =  mcreatedeleterel(mStaedte)
Result    : ()

Operator  : mdelete
Number    : 88
Signature : stream(tuple(X)) x MREL(tuple(X)) -> stream(tuple(X@[TID:tid]))
Example   : query ten2 mfeed filter [.No = 8] tids mdelete[ten2] count
Result    : 1

Operator  : mdeletesave
Number    : 90
Signature : stream(tuple(x)) x MREL(tuple(X)) x MREL(tuple(X@[TID:tid])) -> stream(tuple(X@[TID:tid]))
Example   : query mStaedte mfeed filter[.PLZ = 4000]  tids mdeletesave[mStaedte,Doerfer] count;
Result    : 1

Operator  : mdeletebyid
Number    : 92
Signature : MREL(tuple(X)) x tid  -> stream(tuple(X@[TID:tid]))]
Example   : query mStaedte mdeletebyid[[const tid value 5]] count;
Result    : 1

Operator  : mcreateupdaterel
Number    : 94
Signature : MREL(tuple(X)) -> mem(rel(tuple(x@[(a1_old x1)...(an_old xn)(TID:tid)])))
Example   : let mStaedteUp =  mcreateupdaterel(mStaedte);
Result    : ()

Operator  : mupdate
Number    : 96
Signature : stream(tuple(x)) x MREL(tuple(X))  x ((Ai, (tuple(x) -> di)))* -> stream(tuple(x @ [x1_old t1] @...[xn_old tn] @ [TID tid])))
Example   : query mStaedte mfeed filter[.SName = "Hannover"] tids mupdate[mStaedte; Bev: .Bev + 1000] count;
Result    : 1


Operator  : mupdatesave
Number    : 98
Signature : stream(tuple(x)) x MREL(tuple(x)) x [(ai, (tuple(x) -> di))] ... (an,(tuple(x) -> dn))] x MREL(tuple(x@[TID:tid])) -> stream(tuple(x @ [x1_old t1] @...[xn_old tn] @ [TID tid])))
Example   : query mStaedte mfeed filter[.SName = "Hannover"] tids mupdatesave[mStaedte,mStaedteUp;Bev: .Bev + 1000] count
Result    : 1


Operator  : mupdatebyid
Number    : 100
Signature : MREL(tuple) x tid x [(a1, (tuple(x) -> d1)) ... (an,(tuple(x) -> dn))] -> stream(tuple(x @ [x1_old t1] @...[xn_old tn] @ [TID tid])))
Example   : query ten2 mupdatebyid[ [const tid value 5]; No: .No + 1000] count;
Result    : 1

Operator  : mquicksort
Number    : 102
Signature : MREL(X)  -> stream(X)
Example   : query mStaedte mquicksort isOrdered
Result    : TRUE


Operator  : mquicksortby
Number    : 103
Signature : MREL(X) x (ident1 ... identn) -> stream(X)
Example   : query mStaedte mquicksortby[SName] isOrderedBy[SName]
Result    : TRUE

Operator  : moconsume
Number    : 105
Signature : stream(tuple) x attlist -> mpointer(mem(orel(tuple) attrlist))
Example   : let oten =  ten feed moconsume[No]
Result    : ()

Operator  : mfeed
Number    : 106
Signature : MOREL(tuple(x)) -> stream(tuple(x))
Example   : query oten mfeed count
Result    : 10

Operator  : moconsume
Number    : 108
Signature : stream(tuple(x)) x (ident1 ... identn) -> (mpointer(mem(orel(tuple(x)) (ident1 ... identn)) ))
Example   : let fuenf = ten feed head[5] minsert[ten2] moconsume[No]
Result    : ()

Operator  : moconsumeflob
Number    : 109
Signature : stream(tuple(x)) x (ident1 ... identn) -> (mpointer(mem(orel(tuple(x)) (ident1 ... identn))))
Example   : let moTrains =  Trains feed moconsumeflob [Id]
Result    : ()

Operator  : morange
Number    : 110
Signature : MOREL(tuple(x),T) x T x T -> stream(tuple(x))
Example   : query oten morange[2;2] count;
Result    : 1

Operator  : moleftrange
Number    : 112
Signature : MOREL(tuple(X) T))  x T -> stream(tuple(X))
Example   : query oten moleftrange[2] count;
Result    : 2

Operator  : morightrange
Number    : 114
Signature : MOREL(tuple(X) T))  x T -> stream(tuple(X))
Example   : query oten morightrange[5] count;
Result    : 6

Operator  : moinsert
Number    : 116
Signature : stream(tuple(x)) x MOREL(tuple(x) T)  -> stream(tuple(x@[TID:tid]))
Example   : query ten feed head[5] moinsert[oten] count;
Result    : 5

Operator  : modelete
Number    : 118
Signature : stream(tuple(x)) x MOREL(tuple(x),T) -> stream(tuple(x@[TID:tid]))
Example   : query ten feed head[5] modelete[oten] count;
Result    : 5

Operator  : memload
Number    : 120
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let motestrel = memload(otestrel)
Result    : ()


Operator  : mupdatedirect2
Number    : 121
Signature : stream(tuple(X)) x MREL(tuple(Y)) x IDENT x funlist -> stream(tuple(X))
Example   : query thousand feed addid ten2 mupdatedirect2[TID; No : .No + ..No] count = ten2 mfeed count
Result    : TRUE

Operator  : memload
Number    : 122
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mplz = memload(plz)
Result    : ()


Operator : mquicksortby
Number   : 123
Signature : mrel x id -> stream(tuple)
Example   : query mplz mquicksortby[PLZ] count
Result    : 41267

Operator  : mconsume
Number    : 124
Signature : stream(tuple) -> mpointer(mem(rel(tuple)))
Example   : let TR = intstream(1000, 4000) namedtransformstream[No] mconsume
Result    : ()

Operator  : mmergejoinproject
Number    : 125
Signature : MRel x MREL x IDENT x IDENT x IDENT_list -> mpointer(mem(rel))
Example   : let noPlz = TR mplz mmergejoinproject[No, PLZ; Ort,PLZ,No]
Result    : ()

Operator : nop
Number   : 126
Signature : ANY -> NOTHING
Example   : delete mplz
Result    : ()


Operator  : moshortestpathd
Number    : 200
Signature : MOREL(X) x int x int x int x (tuple->real) -> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query motestrel moshortestpathd [1,3,0; distance(.GeoData_s1,.GeoData_s2)] count;
Result    : 1

Operator  : moshortestpatha
Number    : 202
Signature : MOREL(X)  x int x int x int x (tuple->real) x (tuple->real)-> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query motestrel moshortestpatha [1,3,0; distance(.GeoData_s1,.GeoData_s2),distance(.GeoData_s1,.GeoData_s2) * 0.0] count;
Result    : 1

Operator  : moconnectedcomponents
Number    : 204
Signature : MOREL(X) -> stream(tuple(x@[compNo:int]))
Example   : query motestrel moconnectedcomponents count;
Result    : 74

Operator  : mcreatemgraph
Number    : 206
Signature : orel(tuple(x)) -> mpointer(mem(graph(tuple(x))))
Example   : let graph = mcreatemgraph(otestrel);
Result    : ()

Operator  : mcreatemgraphflob
Number    : 207
Signature : orel(tuple(x)) -> mpointer(mem(graph(tuple(x))))
Example   : let graph1 =  mcreatemgraphflob(otestrel)
Result    : ()

Operator  : mgshortestpathd
Number    : 208
Signature : MGRAPH(tuple(x)) x int x int x int x (tuple->real) -> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query graph mgshortestpathd [1,3,0; distance(.GeoData_s1,.GeoData_s2)] count;
Result    : 1

Operator  : mgshortestpatha
Number    : 210
Signature : MGRAPH(tuple(x)) x int x int x int x (tuple->real) x (tuple->real) -> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query graph mgshortestpatha [1,40,0; distance(.GeoData_s1,.GeoData_s2), distance(.GeoData_s1,.GeoData_s2) * 2.0] count;
Result    : 8

Operator  : mgconnectedcomponents
Number    : 212
Signature : MGRAPH(tuple(x)) -> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query graph mgconnectedcomponents count;
Result    : 74

Operator  : mgconnectedcomponentsN
Number    : 213
Signature : MGRAPH(tuple(x)) -> stream(tuple(x @ SourceComp : int, TargetComp : int)
Example   : query graph mgconnectedcomponents filter[.CompNo <0] count = graph mgconnectedcomponentsN filter[.SourceComp # .TargetComp] count
Result    : TRUE

Operator  : mgconnectedcomponents_old
Number    : 214
Signature : MGRAPH(tuple(x)) -> stream(tuple(a1:t1,...an+1:tn+1))
Example   : query graph mgconnectedcomponents_old count;
Result    : 74

Operator  : mwrap
Number    : 300
Signature : string -> mem(x)
Example   : query mwrap("ten2")
Result    : ( (mem(rel(tuple((No int))))) "ten2")

Operator  : mexactmatch
Number    : 301
Signature : MTTREE(T) x MREL(X) x T  -> stream(X)
Example   : query mStaedte_SName mStaedte mexactmatch ["Wolfsburg"] count;
Result    : 1

Operator  : mrange
Number    : 303
Signature : MTTREE(T) x MREL(X) x T x T-> stream(X)
Example   : query mStaedte_SName mStaedte mrange ["Wiesbaden", "Wuppertal"] count;
Result    : 4

Operator  : mcreatettree
Number    : 305
Signature : MREL x IDENT -> (mpointer(mem(ttree X)))
Example   : let ten2_No = ten2 mcreatettree[No]
Result    : ()

Operator  : matchbelow
Number    : 306
Signature : TTREE(T) x MREL(X)  x T -> stream(X)
Example   : query ten2_No ten2 matchbelow [2] count;
Result    : 1

Operator  : moconsume
Number    : 308
Signature : stream(tuple) x attr^n -> (mpointer(mem(orel(tuple))))
Example   : query Staedte feed head[2] moconsume[SName]
Result    : ( (mpointer (mem (orel (tuple ((SName string) (Bev int) (PLZ int) (Vorwahl string) (Kennzeichen string))) (SName)))) (("Aachen" 239000 5100 "0241" "AC") ("Berlin" 1859000 1000 "030" "B")) )


Operator : moconsumeflob
Number    : 309
Signature : stream(tuple) x attr^n -> mpointer(mem(orel(tuple)))
Example   : query Staedte feed head[2] moconsume[SName]
Result    : ( (mpointer (mem (orel (tuple ((SName string) (Bev int) (PLZ int) (Vorwahl string) (Kennzeichen string))) (SName)))) (("Aachen" 239000 5100 "0241" "AC") ("Berlin" 1859000 1000 "030" "B")) )


Operator  : pwrap
Number    : 310
Signature : {string, mem} -> mpointer
Example   : query pwrap("ten2") getTypeNL contains "mpointer"
Result    : TRUE

Operator  : memload
Number    : 311
Signature : P -> mpointer(mem(P)) , P in {DATA, rel, orel}
Example   : let mplz = memload(plz)
Result    : ()


Operator  : mcreateAVLtree
Number    : 312
Signature : MREL x IDENT -> MAVLTREE
Example   : let mplz_PLZ =  mplz mcreateAVLtree[PLZ]
Result    : ()

Operator  : matchbelow2
Number    : 313
Signature : {AVLTREE(T),TTREE(T)}  x MREL x T x IDENT x V  -> V
Example   : query mplz_PLZ mplz matchbelow2[5000, Ort, "anywhere"]
Result    : "Wiederau"

Operator  : mdeletedirect
Number    : 315
Signature : stream(tuple(X)) x MREL(tuple(X)) -> stream(tuple(X@TID tid))
Example   : query mplz mfeed head[10] mplz mdeletedirect count
Result    : 10


Operator  : mcreatedeleterel
Number    : 317
Signature : MREL(tuple(X))  -> mpointer(mem(rel(tuple(X@[TID:tid]))))
Example  :  let PLZ_DEL =  mcreatedeleterel(mplz)
Result    : ()

Operator  : mdeletedirectsave
Number    : 318
Signature : stream(tuple(X)) x MREL(tuple(X)) x MREL(tuple(X@TID)) -> stream(tuple(X@TID tid))
Example   : query mplz mfeed head[10] mplz PLZ_DEL  mdeletedirectsave count
Result    : 10

Operator  : collect_mvector
Number    : 400
Signature : stream(DATA) x bool -> mpointer(mem(vector(DATA)))
Example   : let V_PLZ = plz feed projecttransformstream[PLZ] collect_mvector[TRUE]
Result    : ()

Operator  : sizemv
Number    : 401
Signature : MVECTOR -> int, MVECTOR represented as mem or mpointer
Example   : query sizemv(V_PLZ) = plz count
Result    : TRUE

Operator  : getmv
Number    : 403
Signature : MVECTOR x int -> DATA, MVECTOR represented as mem or mpointer
Example   : query V_PLZ getmv[22] = plz feed nth[23,TRUE] extract[PLZ]
Result    : TRUE
Remark    : Counting starts with 0

Operator  : putmv
Number    : 405
Signature : MVECTOR x int x DATA -> DATA, MVECTOR represented as  mem or mpointer
Example   : query V_PLZ putmv[22, 333] = plz feed nth[23,TRUE] extract[PLZ]
Result    : TRUE

Operator  : getmv
Number    : 407
Signature : MVECTOR x int -> DATA, MVECTOR represented as mem or mpointer
Example   : query V_PLZ getmv[22] = 333
Result    : TRUE

Operator  : isSortedmv
Number    : 409
Signature : MVECTOR -> bool, mvector represented as mem or mpointer
Example   : query isSortedmv(V_PLZ)
Result    : FALSE

Operator  : sortmv
Number    : 411
Signature : MVECTOR -> mpointer(mvector) , mvector represented as mem or mpointer
Example   : query isSortedmv(sortmv(V_PLZ))
Result    : TRUE

Operator  : feedmv
Number    : 413
Signature : MVECTOR(T) -> stream(T) , MVECTOR represented as  mem or mpointer
Example   : query V_PLZ feedmv count = plz count
Result    : TRUE

Operator  : findmv
Number    : 415
Signature : MVECTOR(T) x T -> int, MVECTOR represented as mem or mpointer
Example   : query findmv(V_PLZ ,3)
Result    : 0

Operator  : matchbelowmv
Number    : 417
Signature : MVECTOR(T) x T -> T , MVECTOR represented as mem or mpointer
Example   : query V_PLZ matchbelowmv[8666]
Result    : 8648

Operator  : insertmv
Number    : 419
Signature : stream(A) x mvector(A) -> stream(A), A in DATA, MVECTOR represented as mem or mpointer
Example   : query intstream(1,10) insertmv[V_PLZ] count
Result    : 10

Operator  : insertmv
Number    : 421
Signature : stream(tuple) x ID x MVECTOR(A) -> stream(tuple)
Example   : query ten feed insertmv[No, V_PLZ] count
Result    : 10

Operator  : count
Number    : 500
Signature : {MREL, MOREL}  -> int
Example   : query ten feed mconsume count
Result    : 10


Operator  : mcreatepqueue
Number    : 600
Signature : stream(tuple) x IDENT -> mpointer(mem(mpqueue(tuple)))
Example   : let mstrassen_PQ_L = strassen feed extend[L : size(.GeoData)] mcreatepqueue[L]
Result    : ()

Operator  : size
Number    : 601
Signature : MPQUEUE -> int
Example   : query size(mstrassen_PQ_L)
Result    : 3212

Operator  : mfeedpq
Number    : 603
Signature : MPQUEUE(X) -> stream(X)
Example   : query mstrassen_PQ_L mfeedpq head[1000] count
Result    : 1000


Operator  : minserttuplepq
Number    : 605
Signature : MPQUEUE x tuple x real [x IDENT] -> bool
Example   : query strassen feed extend[L : size(.GeoData)] extend[ Ok : minserttuplepq(mstrassen_PQ_L, . , .L * 2.0, L)] head[10] count
Result    : 10

Operator  : minserttuplepqprojectU
Number    : 607
Signature : MPQUEUE x tuple x real [x IDENT] -> bool
Example   : query strassen feed extend[L : size(.GeoData), K : 1.0] extend[ Ok : mstrassen_PQ_L minserttuplepqprojectU[ . , .L * 2.0, L;Name,Typ,GeoData,L]] head[10] count
Result    : 10


Operator  : minserttuplepqproject
Number    : 609
Signature : MPQUEUE x tuple x real [x IDENT] -> bool
Example   : query strassen feed extend[L : size(.GeoData), K : 1.0] extend[ Ok : mstrassen_PQ_L minserttuplepqproject[ . , .L * 2.0;Name,Typ,GeoData,L]] head[10] count
Result    : 10

Operator  : mfeedpqAbort
Number    : 611
Signature : MPQUEUE x {int,real} -> stream(tuple)
Example   : query mstrassen_PQ_L mfeedpqAbort[700] count > 0
Result    : TRUE


Operator  : mpqreorder
Number    : 613
Signature : MPQUEUE x fun -> int
Example   : query mstrassen_PQ_L mpqreorder[ -1 * .L]
Result    : 0

Operator  : mpqreorderupdate
Number    : 614
Signature : MPQUEUE x fun x IDENT -> int
Example   : query mstrassen_PQ_L mpqreorderupdate[ -1 * .L, L]
Result    : 0


Operator  : mcreatepqueueflob
Number    : 615
Signature : stream(tuple) x IDENT  -> mpointer( (mem (pqueue tuple)) )
Example   : let mstrassen_PQ_L2 = strassen feed extend[L : size(.GeoData)] mcreatepqueueflob[L]
Result    : ()



Operator  : mfeedpqSize
Number    : 616
Signature : MPQUEUE(X) x int -> stream(X)
Example   : query mstrassen_PQ_L mfeedpqSize[4] count > 0
Result    : TRUE

Operator : mblock
Number   : 700
Signature : stream(X) -> stream(X) , X in {tuple,DATA}
Example   : query ten feed mblock head[5] count
Result    : 5

Operator  : mcreatestack
Number    : 800
Signature : stream(tuple) -> mpointer(mem(stack(tuple)))
Example   : let plzstack1 = plz feed mcreatestack
Result    : ()

Operator  : mcreatestackflob
Number    : 801
Signature : stream(tuple) -> mpointer(mem(stack(tuple)))
Example   : let plzstack2 = plz feed mcreatestackflob
Result    : ()

Operator : mfeedstack
Number : 802
Signature : MSTACK(tuple) -> stream(tuple)
Example   : query plzstack1 mfeedstack count = plz count
Result    : TRUE


Operator  : stacksize
Number    : 803
Signature : MSTACK -> int
Example   : query stacksize(plzstack2) = plz count
Result    : TRUE

Operator  : insertmstack
Number    : 804
Signature : stream(tuple) x MSTACK(tuple) -> stream(tuple)
Example   : query plz feed insertmstack[plzstack1] count = plz count
Result    : TRUE

Operator  : createmgraph2
Number    : 900
Signature : stream(tuple) x IDENT x IDENT x fun -> mpointer(mem(mgraph2((tuple@(MG_Source int, MG_Target int, MG_Cost : real)))))
Example   : let mgraph2 =  otestrel feed createmgraph2[Id_s1,Id_s2, distance(.GeoData_s1,.GeoData_s2)]
Result    : ()


Operator  : createmgraph2
Number    : 901
Signature : stream(tuple) x IDENT x IDENT x fun -> mpointer(mem(mgraph2((tuple@(MG_Source int, MG_Target int, MG_Cost : real)))))
Example   : let mgraph2_1  = otestrel feed head[0] createmgraph2[Id_s1,Id_s2, distance(.GeoData_s1,.GeoData_s2)]
Result    : ()

Operator  : mg2insertorig
Number    : 902
Signature : stream(tuple) x IDENT x IDENT x fun x MGRAPH2 -> stream(tuple@(MG_Source int, MG_Target int, MG_Cost : real))
Example   : query otestrel feed mg2insertorig[Id_s1,Id_s2, distance(.GeoData_s1,.GeoData_s2), mgraph2_1] count = otestrel count
Result    : TRUE

Operator  : mg2insert
Number    : 903
Signature : stream(tuple) x MGRAPH -> stream(tuple)
Example   : query intstream(0,0) transformstream projectextend[; Id_s1 : 1, Id_s2 : 12, Name_s1 : "Brandenburger Tor", Name_s2 : "Glockenturm", GeoData_s1 : [const point value (8593 12243)] , GeoData_s2 :[const point value (-1265 11792)] , MG_Source : 0, MG_Target : 11] extend[MG_Cost : distance(.GeoData_s1, .GeoData_s2)] mg2insert[mgraph2_1] count
Result    : 1


Operator  : mg2feed
Number    : 904
Signature : MGRAPH2 -> stream(tuple)
Example   : query mgraph2_1 mg2feed count
Result    : 75


Operator  : mg2nodemap
Number    : 905
Signature : MGRAPH2 x {int,longint} -> int
Example   : query mgraph2_1 mg2nodemap[40] = mgraph2_1 mg2feed filter[.Id_s1=40] extract[MG_Source]
Result    : TRUE

Operator  : mg2numvertices
Number    : 906
Signature : MGRAPH2 -> int
Example   : query mg2numvertices(mgraph2_1);
Result    : 20

Operator  : mg2successors
Number    : 907
Signature : MGRAPH2 x int -> stream(tuple)
Example   : query mgraph2_1 mg2successors[1] count
Result    : 4

Operator  : mg2predecessors
Number    : 908
Signature : MGRAPH2 x int -> stream(tuple)
Example   : query mgraph2_1 mg2predecessors[1] count
Result    : 4


Operator  : mg2numsuccessors
Number    : 909
Signature : MGRAPH2 x int -> stream(tuple)
Example   : query mgraph2_1 mg2numsuccessors[1]
Result    : 4

Operator  : mg2numpredecessors
Number    : 910
Signature : MGRAPH2 x int -> stream(tuple)
Example   : query mgraph2_1 mg2numpredecessors[1]
Result    : 4


Operator  : mg2disconnect
Number    : 911
Signature : MGRAPH2 x int -> stream(tuple)
Example   : query mgraph2_1 mg2disconnect[1]
Result    : TRUE

Operator  : mg2connectedcomponents
Number    : 912
Signature : MGRAPH2 -> stream(tuple)
Example   : query mgraph2_1  mg2connectedcomponents sortby[CompNo] krdup[CompNo] count
Result    : 2

Operator  : mg2connectedcomponentsN
Number    : 913
Signature : MGRAPH(tuple(x)) -> stream(tuple(x @ SourceComp : int, TargetComp : int)
Example   : query mgraph2_1 mg2connectedcomponents filter[.CompNo <0] count = mgraph2_1 mg2connectedcomponentsN filter[.SourceComp # .TargetComp] count
Result    : TRUE

Operator  : createmgraph2flob
Number    : 914
Signature : stream(tuple) x IDENT x IDENT x fun -> mpointer(mem(mgraph(tuple@MG_Source,MG_Target,MG_Cost)))
Example   : let mgraph2m =  otestrel feed createmgraph2flob[Id_s1,Id_s2, distance(.GeoData_s1,.GeoData_s2)]
Result    : ()


Operator : mg2contract
Number   : 915
Signature : MGRAPH2 -> int
Example   : query mg2contract(mgraph2_1,10,100,6,-1,2,0,0) > 0
Result    : TRUE

Operator : mg2minPathCost
Number   : 916
Signature : MGRAPH2 x int x int x int x int -> double
Example   : query mg2minPathCost(mgraph2,1, 16, 10, 10) > 0
Result    : TRUE

Operator : mg2exportddsg
Number   : 917
Signature: MGRAPH2 x {string,text} x {int,real} -> bool
Example  : query mgraph2 mg2exportddsg['mgraph2.ddsg', 1000]
Result   : TRUE

Operator  : mg2deleteEdges
Number    : 918
Signature : MGRAPH2 x int x int -> bool
Example   : query mgraph2_1 mg2deleteEdges[2,3]
Result    : TRUE


Operator  : createmgraph3
Number    : 1000
Signature : stream(tuple) x IDENT x IDENT x IDENT x int -> mpointer(mem(mgraph3(tuple)))
Example   : let mgraph3_1 = mgraph2_1 mg2feed projectextend[GeoData_s1, GeoData_s2, Name_s1, Name_s2; Id_s1 : .MG_Source, Id_s2 : .MG_Target, Cost : .MG_Cost] createmgraph3[Id_s1, Id_s2, Cost, mg2numvertices(mgraph2_1)]
Result    : ()

Operator  : createmgraph3flob
Number    : 1001
Signature : stream(tuple) x IDENT x IDENT x IDENT x int -> mpointer(mem(mgraph3(tuple)))
Example   : let mgraph3_1f = mgraph2_1 mg2feed projectextend[GeoData_s1, GeoData_s2, Name_s1, Name_s2; Id_s1 : .MG_Source, Id_s2 : .MG_Target, Cost : .MG_Cost] createmgraph3flob[Id_s1, Id_s2, Cost, mg2numvertices(mgraph2_1)]
Result    : ()

Operator  : mg3feed
Number    : 1002
Signature : MGRAPH3 -> stream(tuple)
Example   : query mgraph3_1 mg3feed count = mgraph2_1 mg2feed count
Result    : TRUE


Operator  : mg3numvertices
Number    : 1003
Signature : MGRAPH3 -> int
Example   : query mg3numvertices(mgraph3_1) = mg2numvertices(mgraph2_1)
Result    : TRUE


Operator  : mg3successors
Number    : 1004
Signature : MGRAPH3 x int -> stream(tuple)
Example   : query mgraph3_1 mg3successors[1]  count =  mgraph2_1 mg2successors[1]  count
Result    : TRUE

Operator  : mg3predecessors
Number    : 1005
Signature : MGRAPH3 x int -> stream(tuple)
Example   : query mgraph3_1 mg3predecessors[1] count = mgraph2_1 mg2predecessors[1] count
Result    : TRUE

Operator  : mg3numsuccessors
Number    : 1006
Signature : MGRAPH3 x int -> stream(tuple)
Example   : query mgraph3_1 mg3numsuccessors[1] =  mgraph2_1 mg2numsuccessors[1]
Result    : TRUE

Operator  : mg3numpredecessors
Number    : 1007
Signature : MGRAPH3 x int -> stream(tuple)
Example   : query mgraph3_1 mg3numpredecessors[1]  = mgraph2_1 mg2numpredecessors[1]
Result    : TRUE

Operator  : mg3disconnect
Number    : 1008
Signature : MGRAPH3 x int -> stream(tuple)
Example   : query mgraph3_1 mg3disconnect[1]
Result    : TRUE

Operator  : mg3insert
Number    : 1009
Signature : stream(tuple) x MGRAPH3 -> stream(tuple)
Example   : query intstream(0,0) transformstream projectextend[; GeoData_s1 : [const point value (8593 12243)] , GeoData_s2 :[const point value (-1265 11792)], Name_s1 : "Brandenburger Tor", Name_s2 : "Glockenturm", Id_s1 : 1, Id_s2 : 12  ] extend[Cost : distance(.GeoData_s1, .GeoData_s2)] mg3insert[mgraph3_1] count
Result    : 1

Operator  : mg3connectedcomponents
Number    : 1010
Signature : MGRAPH3 -> stream(tuple)
Example   : query mgraph3_1 mg3connectedcomponents sortby[CompNo] krdup[CompNo] count
Result    : 1

Operator  : mg3connectedcomponentsN
Number    : 1011
Signature : MGRAPH(tuple(x)) -> stream(tuple(x @ SourceComp : int, TargetComp : int)
Example   : query mgraph3_1 mg3connectedcomponents filter[.CompNo <0] count = mgraph3_1 mg3connectedcomponentsN filter[.SourceComp # .TargetComp] count
Result    : TRUE

Operator : mg3contract
Number   :  1012
Signature : MGRAPH3 x int^7 -> int
Example   : query mg3contract(mgraph3_1,10,100,6,-1,2,0,0)
Result    : 0

Operator : mg3minPathCost
Number   : 1013
Signature : MGRAPH3 x int x int x int x int -> double
Example   : query mg3minPathCost(mgraph3_1,1, 16, 10, 10) > 0
Result    : TRUE

Operator : mg3exportddsg
Number   : 1014
Signature: MGRAPH3 x {string,text} x {int,real} -> bool
Example  : query mgraph3_1 mg3exportddsg['mgraph3_1.ddsg', 1000]
Result   : TRUE

Operator  : mg3deleteEdges
Number    : 1015
Signature : MGRAPH3 x int x int -> bool
Example   : query mgraph3_1 mg3deleteEdges[2,3]
Result    : TRUE


Operator  : mgraphPrint
Number    : 1016
Signature : MGRAPH x bool x bool -> bool
Example   : query mgraph3_1 mgraphPrint[FALSE,FALSE]
Result    : TRUE

Operator  : mgraph2text
Number    : 1017
Signature : MGRAPH x bool x bool -> text
Example   : query length(mgraph3_1 mgraph2text[FALSE,FALSE] ) > 0
Result    : TRUE

Operator  : mwrap2
Number    : 1100
Signature : text x string -> mem(X)
Example   : query mwrap2('string', "name")
Result    : ( (mem string) "name")

Operator  : mwrap3
Number    : 1101
Signature : text x string -> mem(X)
Example   : query mwrap3('string', "name")
Result    : ( (mem text) "name")


Operator : memgroupby
Number   : 1200
Signature: stream(T) x attrlist x funlist -> stream(G)
Example  : query plz feed sortby[PLZ] memgroupby[PLZ; C : group mfeed count] = plz feed sortby[PLZ] groupby[PLZ; C : group count]
Result   : TRUE

Operator  : importCH
Number    : 1201
Signature : {string, text} x bool -> stream(tuple)
Example   : query importCH('graph.ch', TRUE) count
Result    : 0
